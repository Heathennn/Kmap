{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?9b05","webpack:///./src/App.vue?e92d","webpack:///./src/App.vue","webpack:///./src/views/Home.vue?545f","webpack:///./src/components/map2/index.vue?708a","webpack:///./src/components/map2/libs/utils/index.js","webpack:///./src/components/map2/libs/Graph/Node.js","webpack:///./src/components/map2/libs/Graph/Edge.js","webpack:///./src/components/map2/libs/constants.js","webpack:///./src/components/map2/libs/Graph/index.js","webpack:///./src/components/map2/libs/Renderer/shapeCustomAttr.js","webpack:///./src/components/map2/libs/Renderer/Viewport.js","webpack:///./src/components/map2/libs/Renderer/nodeShapeRelative.js","webpack:///./src/components/map2/libs/Renderer/ChildrenRenderFactory.js","webpack:///./src/components/map2/libs/Renderer/EdgeDraw.js","webpack:///./src/components/map2/libs/Renderer/Drag.js","webpack:///./src/components/map2/libs/Renderer/index.js","webpack:///./src/components/map2/components/ViewController.vue?8f05","webpack:///src/components/map2/components/ViewController.vue","webpack:///./src/components/map2/components/ViewController.vue?23cf","webpack:///./src/components/map2/components/ViewController.vue","webpack:///src/components/map2/index.vue","webpack:///./src/components/map2/index.vue?08f5","webpack:///./src/components/map2/index.vue","webpack:///./src/components/HelloWorld.vue?7c58","webpack:///src/components/HelloWorld.vue","webpack:///./src/components/HelloWorld.vue?ddb2","webpack:///./src/components/HelloWorld.vue","webpack:///src/views/Home.vue","webpack:///./src/views/Home.vue?2b8c","webpack:///./src/views/Home.vue","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/components/map2/index.vue?2c9f","webpack:///./src/components/map2/components/ViewController.vue?1fb8","webpack:///./src/components/HelloWorld.vue?6c8d"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","staticRenderFns","script","component","staticClass","_v","_m","ref","childNodeCanDrag","graph","renderer","on","$event","updateTreeMap","updateMapDate","forEach","obj","cb","Node","attr","nodeCount","canDrag","id","x","y","isRootNode","children","father","connectFather","connectChildren","label","shape","direction","isTreeNode","isTreeMap","isTree","count","child","childrenCount","Math","floor","nodeId","findIndex","find","isFirstLevelNode","dx","dy","translateSingleNodeRender","translate","Edge","source","target","edgeAccumulativeCount","LEFT","RIGHT","Graph","nodeAccumulativeCount","nodes","edges","selected","root","gRenderer","childNodesCanDrag","tree","rightNodeMaxCount","_initRoot","setSelected","childNodesRender","childNodes","parentNode","node","currentNode","_addNodeData","checkIsRootNode","console","log","_removeNodeData","setLabelRender","oldSelected","setSelectedRender","addableNodeSet","curNode","notAddableNodeSet","_getChildrenNodeSet","parentId","childId","parent","removeNodeRender","_setParentData","_resetChildrenProperty","setParentRender","childrenNodeSet","addNodeRender","rootText","getCanvasWidth","rootNodeRender","_removeParentConnect","_removeNodeDataRecursively","edge","edgeId","_addEdge","_setNodeDirection","isRemoveInNodes","nodeFather","nodeConnectFather","childrenIndex","getChildNodeIndex","nodeConnectFatherId","isTreeMapNode","_isFirstNodeRightCountOverflow","rootChild","leftCount","rightCount","setNodePosition","rect","nodeX","nodeY","nodePadding","textBox","getBBox","rectWidth","width","rectHeight","height","setRootShape","text","mindmapType","rootNodepadding","setFirstLevelShape","firstLevelPadding","setSecondMoreShape","secondMorePadding","Raphael","st","nodeShape","selectedShape","stroke","toFront","unSelectedShape","isSecondMoreNode","overlapShape","unOverlapShape","setLabel","dragNodeOpacityShape","opacity","opacityShape","unOpacityShape","init","paper","customAttributes","rootAndFirstStroke","secondMoreStroke","Viewport","aCanvasDom","aPaper","dX","dY","realScale","canvasDom","scale","canvasWidth","clientWidth","canvasHeight","clientHeight","viewBox","dragging","lastX","lastY","_setViewport","aScale","setViewBox","e","mousedownHandle","event","layerX","layerY","mousemoveHandle","mouseupHandle","setViewportScale","setViewportDrag","addEventListener","nodeName","isDragging","getViewbox","nodeShapeRelative","nodeDefaultWidth","nodeDefaultHeight","littleNodeDefaultHeight","nodeXInterval","nodeYInterval","getSingleNodeHeight","getSingleNodeWidth","getNodeAreaHeight","getNodeAreaWidth","getChildHeadNode","getChildLastNode","getChildFarLeftNode","getNextChildHeadNode","result_node","reduce","getChildFarRightNode","getOffsetYWithHeadNode","headNode","abs","getOffsetYWidthLastNode","lastNode","getOffsetXBetweenNodes","node1","node2","getOffsetXWithHeadNode","getOffsetXWidthLastNode","ChildrenRenderFactory","createRenderStrategy","drawNode","drawEdge","setDrag","strategy","childrenCountIsOdd","ChildrenRenderStrategy","OddNodeRender","EvenNodeRender","AbstractRender","treeNodeXInterval","treeNodeYInterval","reRenderChildrenNode","doRender","commonOddRender","hfx","hfy","middle_node_index","getMiddleChildNodeIndex","middle_node","middle_node_x","middle_node_y","_reRenderNode","current_x","next_head_node","current_y","last_last_node","commonEvenRender","middle_x","middle_y","last_x","last_y","next_x","next_y","commonTreeOddRender","current_last_node","current_head_node","commonTreeEvenRender","constructor","EdgeDraw","sourceBox","targetBox","getCenterCoordinate","box","x2","y2","getPathCoordinate","position","centerCoor","includes","isStart","_offsetX","_offsetY","getControllerCoordinate","coor","controller","_d","_ckx","_cky","drawRootCurve","startCenterCoor","k1","k2","pathPoints","x1","y1","x3","y3","edgePath","path","fullfill","toBack","set","remove","drawBezierCurve","endCenterCoor","startCoor","endCoor","NormalController","StartOffsetX","StartOffsetY","EndOffsetX","EndOffsetY","TreeMapController","currentController","controllerStartCoor","controllerEndCoor","startX","startY","endX","endY","startControllerX","startControllerY","endControllerX","endControllerY","Drag","aNode","options","viewportHandle","cloneShape","addableBoxSet","lastOverlapId","overlapNodeId","enableRender","canRender","_cloneNodeShape","newRect","clone","newLabel","newShape","_getAddableBBoxSet","addableBBoxSet","addableSet","getParentAddableNodeSet","_getOverlapNodeId","nodeBBox","curBBox","isBBoxIntersect","_setChildrenOpacity","_setChildrenNormal","unOpacitShape","moveFnc","isDraggable","style","cursor","transform","getNodes","startFnc","endFnc","lastOverlapNode","setParent","parseInt","click","mousedown","mousemove","mouseup","drag","Renderer","document","getElementById","canvasId","canvasClickCb","nodeClickCb","shapeCustomAttr","setCanvasClick","_resetBrotherPosition","_drawEdge","_setDrag","removeNodeAndChildrenShape","posX","posY","labelX","labelY","oldWidth","newWidth","gap","rootNode","childrenWithShapeCount","_reRenderChildrenNode","edgeDraw","childrenRenderStrategy","nodeAreaHeight","nodeAreaWidth","_this","_resetFatherNodePosition","_resetChildNodePosition","DragHandle","minusScale","_s","plusScale","directives","rawName","expression","$$selectedVal","Array","filter","map","val","_value","multiple","_l","item","domProps","addNode","removeNode","toggleDraggable","saveData","$emit","randomTree","isArray","_i","$$a","$$el","$$c","checked","$$v","$$i","concat","composing","currentText","setGraphText","msg","props","String","components","HelloWorld","Map","Vue","use","VueRouter","routes","Home","router","base","config","productionTip","render","h","App","$mount"],"mappings":"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","file":"js/app.f7d5bbed.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/Kmap/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=68fdcb76&\"\nvar script = {}\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"home\"},[_c('h2',[_vm._v(\"思维导图\")]),_vm._m(0),_vm._m(1),_c('Map')],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._v(\"重构自某位 \"),_c('a',{attrs:{\"href\":\"https://github.com/RockyRen/mindmaptree\"}},[_vm._v(\"不知名大佬\")]),_vm._v(\", 核心渲染方式已经重写, 并且增加了树状导图\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('a',{attrs:{\"href\":\"https://github.com/Heathennn/Kmap#%E5%AF%BC%E5%9B%BE\"}},[_vm._v(\"Docs\")])])}]\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"demo-svg\"},[_c('div',{staticClass:\"mindmap\"},[_c('div',{staticClass:\"mindmap-main\"},[_c('view-controller',{ref:\"viewController\",attrs:{\"childNodeCanDrag\":_vm.childNodeCanDrag,\"graph\":_vm.graph,\"renderer\":_vm.renderer},on:{\"update:childNodeCanDrag\":function($event){_vm.childNodeCanDrag=$event},\"update:child-node-can-drag\":function($event){_vm.childNodeCanDrag=$event},\"updateTreeMap\":_vm.updateTreeMap,\"updateMapDate\":_vm.updateMapDate}}),_c('div',{attrs:{\"id\":\"mindmapCanvas\"}})],1)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","// 遍历对象\nexport function forEach(obj, cb) {\n    for(var key in obj){\n        if(obj.hasOwnProperty(key)){\n            cb(obj[key], key);\n        }\n    }\n}\n","import { forEach } from '../utils';\n\nexport default class Node {\n    constructor(attr={}, renderer, nodeCount=0, canDrag=false) {\n        this.renderer = renderer;\n        this.canDrag = canDrag;\n        if(attr.hasOwnProperty('id')) {\n            this.id = attr.id;\n        } else {\n            this.id = nodeCount;\n        }\n\n        if(attr.hasOwnProperty('x') && attr.hasOwnProperty('y')) {\n            this.x = attr.x;\n            this.y = attr.y;\n        } else {\n            this.x = null;\n            this.y = null;\n        }\n\n        // 是否根节点\n        this.isRootNode = !!attr.isRootNode;\n\n        //节点的直接子节点引用集合\n        this.children = [];\n        //节点的父节点引用\n        this.father = null;\n\n        //与父节点的边的引用\n        this.connectFather = null;\n        //与子节点的边的引用集合\n        this.connectChildren = {};\n\n        //节点的文本\n        this.label = attr.label || \"任务\" + this.id;\n\n        //节点的图形,其类型为Raphael的element或set对象\n        this.shape = null;\n\n        //判断在根结点左边还是右边的属性  默认放在右边 index.js中会修正位置\n        this.direction = attr.direction || 1;\n\n        this.isTreeNode = attr.isTreeMap || 0;\n\n        this.data = attr.data || null;\n    }\n\n    setNodeDraggable(value) {\n        this.canDrag = value;\n    }\n\n    isDraggable() {\n        return this.canDrag;\n    }\n\n    checkIsRootNode() {\n        return this.isRootNode;\n    }\n\n    checkIsTreeMap() {\n        return !!+this.isTree;\n    }\n\n    childrenCount() {\n        return this.children.length;\n    }\n    childrenWithShapeCount() {\n        let count = 0;\n        this.children.forEach( child => {\n            if(child.shape) {\n                count++;\n            }\n        })\n        return count;\n    }\n\n    /**\n     * 子节点数量为奇数\n     * @returns {number}\n     */\n    childrenCountIsOdd() {\n        return this.childrenCount() & 1 === 1;\n    }\n\n    /**\n     * 奇数个子节点时, 中间的子节点索引\n     * 偶数个子节点时, 中间点的下一个子节点索引\n     */\n    getMiddleChildNodeIndex() {\n        return Math.floor(this.childrenCount() / 2);\n    }\n\n    // 获取指定子节点的索引\n    getChildNodeIndex(nodeId) {\n        return this.children.findIndex( child => child.id == nodeId)\n    }\n\n    // 获取指定子节点\n    getChildNode(nodeId) {\n        return this.children.find( child => child.id == nodeId)\n    }\n\n    /**\n     * 判断是否有兄弟节点\n     * @returns {null|boolean}\n     */\n    hasBrotherNode() {\n        return this.father && this.father.children.length > 1\n    }\n\n    isTreeMapNode() {\n        return this.isTreeNode == 1;\n    }\n\n    isFirstLevelNode() {\n        return this.father && this.father.isRootNode;\n    }\n    isSecondMoreNode() {\n        return !this.isRootNode && !this.isFirstLevelNode();\n    }\n\n    translate(dx, dy) {\n        this.x += dx;\n        this.y += dy;\n\n        //节点移动渲染\n        this.renderer.translateSingleNodeRender(this, dx, dy);\n        this.children.forEach( child => {\n            child.translate(dx, dy);\n        })\n    }\n}\n","export default class Edge {\r\n    constructor(source, target, edgeAccumulativeCount) {\r\n        this.id = ++edgeAccumulativeCount;\r\n\r\n        //起点节点的引用\r\n        this.source = source;\r\n        //终点节点的引用\r\n        this.target = target;\r\n\r\n        //边的图形,其类型为Raphael的element或set对象\r\n        this.shape = null;\r\n    }\r\n}","export const LEFT = -1;\nexport const RIGHT = 1;\nexport const TREE = 2;\n","import Node from './Node';\nimport Edge from './Edge';\nimport { forEach } from '../utils';\nimport {\n    LEFT,\n    RIGHT\n} from '../constants';\n\nexport default class Graph {\n    constructor() {\n        // 累计数量，即使删除了node也不会减少，用于生成id\n        this.nodeAccumulativeCount = 0;\n        this.edgeAccumulativeCount = 0;\n\n        // 节点集合\n        this.nodes = {};\n        // 边集合\n        this.edges = {};\n\n        this.selected = null;\n\n        this.root = null;\n\n        this.gRenderer = {};\n\n        this.childNodesCanDrag = false;\n\n        this.tree = null;\n\n        this.isTreeMap = 1;\n\n        this.rightNodeMaxCount = 5;\n    }\n\n    init(renderer, tree, isTreeMap) {\n        this.tree = tree;\n        this.isTreeMap = isTreeMap;\n        this.gRenderer = renderer;\n        this.root = this._initRoot(tree && tree.label);\n        if ( tree ) {\n            this.setSelected(this.root);\n            this.childNodesRender(tree.children, this.selected);\n            this.setSelected(null)\n        }\n    }\n\n    getRootNode() {\n        return this.root;\n    }\n\n    toggleChildNodeCanDrag(value) {\n        this.childNodesCanDrag = value;\n    }\n\n    // 设置右侧节点最大数\n    setRightNodeMaxCount(count) {\n        this.rightNodeMaxCount = count;\n    }\n\n    // 批量渲染子节点\n    childNodesRender(childNodes, parentNode) {\n        childNodes.forEach( node => {\n            let currentNode = this._addNodeData(parentNode, this.childNodesCanDrag, { ...node, isTreeMap: this.isTreeMap } );\n            if ( node.children ) {\n                this.childNodesRender(node.children, currentNode);\n            }\n        })\n    }\n\n    addNode() {\n        if(this.selected) {\n            return this._addNodeData(this.selected, this.childNodesCanDrag, {isTreeMap: this.isTreeMap});\n        }\n    }\n\n    removeNode() {\n        if(this.selected) {\n            if(this.selected.checkIsRootNode()) {\n                console.log('cannot remove root node');\n            } else {\n                this._removeNodeData(this.selected);\n                this.setSelected(null);\n            }\n        }\n    }\n\n     /**\n     * 设置节点的文本\n     * @param node\n     * @param label\n     */\n    setLabel(label) {\n        if(this.selected) {\n            this.selected.label = label;\n\n            //label改变渲染\n            this.gRenderer.setLabelRender(this.selected);\n        }\n        \n    }\n\n    setSelected(node) {\n        if(this.selected === node) {\n            return;\n        }\n        \n        let oldSelected = this.selected;\n        this.selected = node;\n        \n        this.gRenderer.setSelectedRender(this.selected, oldSelected);\n    }\n\n    getSelected() {\n        return this.selected;\n    }\n\n    getNodes() {\n        return this.nodes;\n    }\n\n    /**\n     * 获得当前节点可成为父节点候选的节点集\n     * @param node \n     */\n    getParentAddableNodeSet(node) { \n        let addableNodeSet = {};\n\n        forEach(this.nodes, (curNode) => {\n            addableNodeSet[curNode.id] = curNode;\n        })\n\n        let notAddableNodeSet = this._getChildrenNodeSet(node, {});\n        notAddableNodeSet[node.id] = node;\n        if(node.father){\n            notAddableNodeSet[node.father.id] = node.father;\n        }\n\n        // 在this.nodes副本中除去当前节点及该节点的所有子节点的引用\n        forEach(notAddableNodeSet, function(curNode){\n            delete addableNodeSet[curNode.id];\n        });\n\n        return addableNodeSet;\n    }\n\n    setParent(parentId, childId) {\n        let parent = this.nodes[parentId];\n        let child = this.nodes[childId];\n\n        if(child === parent || parent === null) { return null; }\n        \n        if(child.father === parent) { return; }\n        else{\n            //需要设置新父节点的children，才能正确删除重绘子节点时\n            delete child.father.children[child.id];\n            //在child.connectFather改变之前，递归删除子节点\n            this.gRenderer.removeNodeRender(child);\n        }\n\n        \n\n        this._setParentData(parent, child);\n        \n\n        this._resetChildrenProperty(child.children);\n\n        //在新的father上递归添加原节点（递归添加）的渲染\n        this.gRenderer.setParentRender(child);\n\n    }\n    \n    _getChildrenNodeSet(node, childrenNodeSet={}) {\n        if(childrenNodeSet && node.children) {\n            node.children.forEach( child => {\n                childrenNodeSet[child.id] = child;\n                this._getChildrenNodeSet(child.children, childrenNodeSet);\n            })\n        }\n        \n        return childrenNodeSet;\n    }\n\n\n    _addNodeData(parent, childNodesCanDrag, attr={}) {\n        // 数据变更部分\n        let node = new Node(attr, this.gRenderer, this.nodeAccumulativeCount, childNodesCanDrag);\n        this.nodeAccumulativeCount++;\n        let nodeId = node.id;\n        this.nodes[nodeId] = node;\n        this._setParentData(parent, node);\n\n        // 新增节点渲染\n        this.gRenderer.addNodeRender(node);\n        \n        return node;\n    }\n\n    /**\n     * 初始化根结点\n     * @returns {*}\n     * @private\n     */\n    _initRoot(rootText) {\n        console.log('set root node mode:', this.isTreeMap);\n        let root = this._addNodeData(null, this.childNodesCanDrag, {\n            x: this.gRenderer.getCanvasWidth() / 2 -50,\n            y: 200,\n            id: 0,\n            isTreeMap: this.isTreeMap,\n            isRootNode: true});\n        root.label = rootText || '中心主题';\n\n        this.gRenderer.rootNodeRender(root);\n\n        return root;\n\n    }\n\n    /**\n     * 删除节点\n     * @param node\n     */\n    _removeNodeData(node) {\n        // 先先断开父节点的children和connectChildren连接，再渲染删除，然后删除递归数据\n        this._removeParentConnect(node);\n\n        this.gRenderer.removeNodeRender(node);\n\n        this._removeNodeDataRecursively(node);\n    }\n\n    _addEdge(source, target, attr) {\n        let edge = new Edge(source, target, this.edgeAccumulativeCount);\n        this.edgeAccumulativeCount++;\n        let edgeId = edge.id;\n        this.edges[edgeId] = edge;\n        return edge;\n    }\n\n    _setParentData(parent, child) {\n        //如果设置父节点为自己或parent为null时,则返回null\n        if(child === parent || parent === null) { return null }\n        //如果parent与child的父节点相等,则退出\n        if(child.father === parent) { return child.connectFather }\n\n        this._removeParentConnect(child, false);\n\n        //设置child的father\n        child.father = parent;\n        //设置新父节点的children;\n        // child.father.children[child.id] = child;\n        // 新增数组类型的子节点\n        child.father.children.push(child);\n        //设置child的connectFather,并创建新边\n        child.connectFather = this._addEdge(parent, child);\n        //设置新父节点的connectChildren\n        child.father.connectChildren[child.connectFather.id] = child.connectFather;\n\n        this._setNodeDirection(child);\n\n    }\n\n    \n\n    _removeParentConnect(node, isRemoveInNodes=true) {\n        //若child存在旧父节点,则删除旧父节点child上该节点的引用\n        let nodeFather = node.father,\n            nodeConnectFather = node.connectFather;\n        if(nodeFather) {\n            let nodeId = node.id;\n            let childrenIndex = nodeFather.getChildNodeIndex(nodeId);\n            console.log(`childrenIndex ==>`, childrenIndex);\n            childrenIndex > -1 && nodeFather.children.splice(childrenIndex, 1);\n            console.log(`nodeFather.children ==>`, nodeFather.children);\n            if(isRemoveInNodes) {\n                // 删除nodes集合中的该对象的引用\n                delete this.nodes[nodeId];\n            }\n            \n\n        }\n        //若child存在旧父节点,则删除旧父节点connectChildren上与child的边的引用\n        if(nodeConnectFather) {\n            let nodeConnectFatherId = nodeConnectFather.id;\n            delete nodeFather.connectChildren[nodeConnectFatherId];\n            delete this.edges[nodeConnectFatherId];\n        }\n    }\n\n    /**\n     * 设置节点的direction属性\n     * @param node\n     * @private\n     */\n    _setNodeDirection(node) {\n        let direction = null;\n        let father = node.father;\n\n        let isFirstLevelNode = father.checkIsRootNode(),    \n            isRootNode = !father;\n        if ( father.isTreeMapNode() ) {\n            node.direction = 1;\n            return;\n        }\n        // 如果是第一层节点，则根据左右节点数获得位置值\n        if(isFirstLevelNode) {\n            if(this._isFirstNodeRightCountOverflow()) {\n                node.direction = LEFT;\n            } else {\n                node.direction = RIGHT;\n            }\n        } \n        //如果为第n层(n>=2)节点,则按照父节点的direction设置\n        else if(!isFirstLevelNode && !isRootNode) {\n            node.direction = father.direction;\n        }\n    }\n\n    /**\n     * 判断第一层节点中右边节点大于(不等于)左边节点\n     * @returns boolean\n     * @private\n     */\n    _isFirstNodeRightMoreThanLeft() {\n        let root = this.root;\n        let leftCount = 0,\n            rightCount = 0;\n        root.children.forEach( rootChild => {\n            if(rootChild.direction === -1) {\n                leftCount++;\n            } else if(rootChild.direction === 1) {\n                rightCount++;\n            }\n        });\n        return false;\n        // return rightCount > leftCount;\n    }\n\n    /**\n     * 判断第一层节点中右边节点数量是否超过要求的数量\n     * @returns boolean\n     * @private\n     */\n    _isFirstNodeRightCountOverflow() {\n        let root = this.root;\n        let rightCount = 0;\n        root.children.forEach(rootChild => {\n            if(rootChild.direction === 1) {\n                rightCount++;\n            }\n        });\n        return rightCount > this.rightNodeMaxCount;\n        // return rightCount > leftCount;\n    }\n\n    /**\n     * 递归删除节点的数据\n     * @param node\n     * @private\n     */\n    _removeNodeDataRecursively(node) {\n        // 删除父节点相关:删除父节点与该节点的边界,从父节点的children上删除该节点,最后删除父节点引用\n        // 数组中的属性设为undefined,其他引用设为null\n        this._removeParentConnect(node);\n        node.father = null;\n        node.connectFather = null;\n        node.children.forEach( child => {\n            this._removeNodeDataRecursively(child);\n        })\n\n    }\n\n    /**\n     * 重新画线 / 设置direction\n     * @param children\n     * @private\n     */\n    _resetChildrenProperty(children) {\n        children.forEach( child => {\n            child.connectFather = this._addEdge(child.father, child);\n\n            this._setNodeDirection(child);\n\n            this._resetChildrenProperty(child.children);\n        });\n    }\n}\n","import Raphael from 'raphael';\n/**\n * 将label和rect设置为合适的位置\n * @param label\n * @param rect\n * @param nodeX\n * @param nodeY\n * @param nodePadding\n */\nfunction setNodePosition(label, rect, nodeX, nodeY, nodePadding){\n    let textBox = label.getBBox();\n    let rectWidth = textBox.width + nodePadding.width;\n    let rectHeight = textBox.height + nodePadding.height;\n\n    label.attr({\n        x: nodeX + rectWidth * 0.5,\n        y: nodeY + rectHeight * 0.5\n    });\n    rect.attr({\n        width: rectWidth,\n        height: rectHeight\n    })\n}\n\n/**\n * 设置根结点的外形\n * @param shape\n * @param nodeX\n * @param nodeY\n * @param text\n */\nfunction setRootShape(shape, nodeX, nodeY, text, mindmapType){\n    let label = shape[0];\n    let rect = shape[1];\n\n\n    label.attr({\n        'font-size': 25,\n        'fill': 'white',\n        'text': text\n    });\n\n    rect.attr({\n        'rootAndFirstStroke': null\n    });\n\n    if(mindmapType === 'desktop'){\n        rect.attr({\n            'fill': '#428bca'\n        });\n    }else if(mindmapType === 'taskMore'){\n        rect.attr({\n            'fill': '#64d4a5'\n        });\n    }\n\n    let rootNodepadding = {\n        width: 42,\n        height: 24\n    };\n    setNodePosition(label, rect, nodeX, nodeY, rootNodepadding);\n\n};\n\n/**\n * 设置第一层节点的外形\n * @param shape\n * @param nodeX\n * @param nodeY\n * @param text\n */\nfunction setFirstLevelShape(shape, nodeX, nodeY, text){\n    let label = shape[0];\n    let rect = shape[1];\n\n    label.attr({\n        'font-size': 16,\n        'text': text\n    });\n\n    rect.attr({\n        'fill': 'white',\n        'rootAndFirstStroke': null\n    });\n\n    let firstLevelPadding = {\n        width: 40,\n        height: 20\n    };\n\n    setNodePosition(label, rect, nodeX, nodeY, firstLevelPadding);\n\n\n\n};\n\n\n/**\n * 设置n>=2层节点的外形\n * @param shape\n * @param nodeX\n * @param nodeY\n * @param text\n */\nfunction setSecondMoreShape(shape, nodeX, nodeY, text){\n    let label = shape[0];\n    let rect = shape[1];\n\n    label.attr({\n        'font-size': 15,\n        'text': text\n    });\n\n    rect.attr({\n        'secondMoreStroke': null\n    });\n\n    let secondMorePadding = {\n        width: 20,\n        height: 10\n    };\n\n    setNodePosition(label, rect, nodeX, nodeY, secondMorePadding);\n};\n\n\n\n/**\n * 根绝节点的类型，设置节点的外形\n * @param node\n */\nRaphael.st.nodeShape = function(node, mindmapType){\n    mindmapType = mindmapType || 'desktop';\n    if(node.checkIsRootNode()){\n        setRootShape(this, node.x, node.y, node.label, mindmapType);\n    }else if(node.isFirstLevelNode()){\n        setFirstLevelShape(this, node.x, node.y, node.label);\n    }else{\n        setSecondMoreShape(this, node.x, node.y, node.label);\n    }\n};\n\n/**\n * 被选择的外形\n */\nRaphael.st.selectedShape = function(node){\n    //@workaround:暂时选择的样式\n    this[1].attr({\n        stroke: '#ff0033',\n        'stroke-width': 2.5\n\n    });\n    this.attr({\n        'opacity': 1\n    });\n\n    this[0].toFront();\n};\n\n/**\n * 取消选择的外形：根据节点的类型不同而改变取消选择的外形\n * @param node\n */\nRaphael.st.unSelectedShape = function(node){\n    if(node.isSecondMoreNode()){\n        this[1].attr({\n            'secondMoreStroke': null\n        })\n    }else{\n        //@workaround:暂时被选择的样式\n        this[1].attr({\n            'rootAndFirstStroke': null\n        })\n    }\n\n};\n\n/**\n * 重叠时节点的外形\n * @param node\n */\nRaphael.st.overlapShape = function(node){\n    this[1].attr({\n        stroke: 'blue'\n    })\n};\n\n/**\n * 取消重叠时，节点的外形：设置根据节点的类型不同而不同\n * @param node\n */\nRaphael.st.unOverlapShape = function(node){\n    if(node.isSecondMoreNode()){\n        this[1].attr({\n            'secondMoreStroke': null\n        })\n    }else{\n        this[1].attr({\n            'rootAndFirstStroke': null\n        });\n    }\n};\n\nRaphael.st.setLabel = function(node){\n    this[0].attr({\n        'text': node.label\n    })\n};\n\n\n/**\n * 透明样式：用于拖动节点时的透明显示\n * @param node\n */\nRaphael.st.dragNodeOpacityShape = function(node){\n    Raphael.st.unSelectedShape.call(this, node);\n\n    this.attr({\n        opacity: 0.4\n    });\n    this.toFront();\n\n};\n\nRaphael.st.opacityShape = function(){\n    this.attr({\n        opacity: 0.5\n    })\n};\n\n\nRaphael.st.unOpacityShape = function(){\n    this.attr({\n        opacity: 1\n    })\n};\n\n\n\nexport default {\n    init: function(paper){\n\n        //设置默认的属性\n        //默认的根结点和第一层节点的外框笔触样式\n        paper.customAttributes.rootAndFirstStroke = function(){\n            return {\n                'stroke': '#808080',\n                'stroke-width': 1\n            }\n        };\n\n        //默认的n>=2层节点的外框笔触样式\n        paper.customAttributes.secondMoreStroke = function(){\n            return {\n                'stroke': 'none'\n            }\n        };\n    }\n}\n","/**\n * 画布视野设置模块\n * @param aCanvasDom 画布的dom对象\n * @param aPaper 画布的paper对象\n * @returns {{setViewportDrag: setViewportDrag}}\n * @constructor\n */\nvar Viewport = function(aCanvasDom, aPaper){\n    var canvasDom = aCanvasDom;\n    var paper = aPaper;\n    var scale = 1.0;    //规模默认为1.0\n    var canvasWidth = canvasDom.clientWidth || 400;        //视窗宽度\n    var canvasHeight = canvasDom.clientHeight || 400;      //视窗高度\n    var viewBox = {\n        x: 0,\n        y: 0,\n        width: canvasWidth,\n        height: canvasHeight\n    };\n\n    var dragging = false;\n    var lastX = 0;\n    var lastY = 0;\n    var dX, dY, realScale;\n\n\n    /**\n     * 设置svg视野\n     * @param x 视野x坐标\n     * @param y 视野y坐标\n     * @param aScale 视野规模\n     */\n    function _setViewport(x, y ,aScale){\n        scale = aScale;\n        var realScale = 1.0 / scale;\n        if(scale > 5){\n            scale = 5;\n        }\n        //设置视野最小规模\n        if(scale < 0.2){\n            scale = 0.2;\n        }\n\n        //设置视野对象\n        viewBox.x = x;\n        viewBox.y = y;\n        viewBox.width = canvasWidth * realScale;\n        viewBox.height = canvasHeight * realScale;\n\n        //设置视野\n        try {\n            paper.setViewBox(viewBox.x, viewBox.y, viewBox.width, viewBox.height);\n        } catch(e) {\n            // TODO 处理异常 ?\n        }\n    }\n\n    function mousedownHandle(event){\n        realScale = 1.0 / scale;\n\n        lastX = event.layerX;\n        lastY = event.layerY;\n        dragging = true;\n    }\n\n    function mousemoveHandle(event){\n        if(dragging){\n            dX = -(event.layerX - lastX) * realScale;\n            dY = -(event.layerY - lastY) * realScale;\n\n            viewBox.x += dX;\n            viewBox.y += dY;\n\n            _setViewport(viewBox.x, viewBox.y, scale);\n\n            lastX = event.layerX;\n            lastY = event.layerY;\n\n            //console.log(viewBox.x, viewBox.y);\n        }\n    }\n\n    function mouseupHandle(event){\n        if(dragging){\n            dragging = false;\n        }\n    }\n\n    function setViewportScale(aScale) {\n        // let offsetX = (aScale - scale) / 2 * viewBox.width;\n        // let offsetY = (aScale - scale) / 2 * viewBox.height;\n        _setViewport(viewBox.x, viewBox.y, aScale);\n    }\n\n    /**\n     * 画布视野移动设置\n     */\n    function setViewportDrag(){\n        //添加画布的鼠标点击事件\n        canvasDom.addEventListener('mousedown', function(event){\n            if(event.target.nodeName !== 'svg') { return };\n            mousedownHandle(event);\n            /*\n                realScale = 1.0 / scale;\n\n                lastX = event.layerX;\n                lastY = event.layerY;\n                dragging = true;*/\n        });\n\n        //添加画布的鼠标移动事件\n        canvasDom.addEventListener('mousemove', function(event){\n            if(event.target.nodeName !== 'svg') { return };\n            mousemoveHandle(event);\n            /*\n                if(dragging){\n                dX = -(event.layerX - lastX) * realScale;\n                dY = -(event.layerY - lastY) * realScale;\n\n                viewBox.x += dX;\n                viewBox.y += dY;\n\n                _setViewport(viewBox.x, viewBox.y, scale);\n\n                lastX = event.layerX;\n                lastY = event.layerY;\n                }*/\n        });\n\n        //添加画布的鼠标释放事件\n        canvasDom.addEventListener('mouseup', function(event){\n            if(event.target.nodeName !== 'svg') { return };\n            mouseupHandle(event);\n            /*\n                if(dragging){\n                dragging = false;\n                }*/\n        });\n    }\n\n\n    return {\n        isDragging: function(){\n            return dragging;\n        },\n        setViewportDrag: setViewportDrag,\n        setViewportScale: setViewportScale,\n        getViewbox: function(){\n            return viewBox;\n        },\n        mousedownHandle: mousedownHandle,\n        mouseupHandle: mouseupHandle,\n        mousemoveHandle: mousemoveHandle\n    };\n};\n\nexport default Viewport;\n\n","\n/**\n * 结点外形相关\n */\nvar nodeShapeRelative = (function(){\n\n    return {\n        nodeDefaultWidth: 80,\n        nodeDefaultHeight: 38,\n        littleNodeDefaultHeight: 26,\n        nodeXInterval: 12,\n        nodeYInterval: 20,\n        getSingleNodeHeight: function(node){\n            if(node.shape){\n                return node.shape[1].attr('height');\n            }\n            //如果为新结点则返回默认高度\n            else{\n\n                if(node.isFirstLevelNode()){\n                    return this.nodeDefaultHeight;\n                }\n                //@workaround:如果为第三层或以上层节点\n                else{\n                    return this.littleNodeDefaultHeight;\n                }\n\n\n            }\n        },\n        getSingleNodeWidth: function(node){\n            if(node.shape){\n                return node.shape[1].attr('width');\n            }else{\n                return this.nodeDefaultWidth;\n            }\n        },\n        getNodeAreaHeight: function(node){\n            //如果结点不是叶结点,则从子结点中累加高度\n            if(node.childrenCount() > 0){\n                var height = 0;\n                for(var i in node.children){\n                    height += this.getNodeAreaHeight(node.children[i]);\n                }\n                return height;\n            }else{\n                return this.getSingleNodeHeight(node) + this.nodeYInterval;\n            }\n        },\n        getNodeAreaWidth: function(node){\n            //如果结点不是叶结点,则从子结点中累加高度\n            if(node.childrenCount() > 0){\n                var width = 0;\n                for(var i in node.children){\n                    width += this.getNodeAreaWidth(node.children[i]);\n                }\n                return width;\n            }else{\n                //\n                return this.getSingleNodeWidth(node) + this.nodeYInterval;\n            }\n        },\n\n        // 获取节点中离开头节点最近的节点(一般是层级最深的开头节点, 但是在父节点文本过长时, 有可能会是父节点本身)(指数组中开头位置)\n        getChildHeadNode(node) {\n            if (node.childrenCount()) {\n                // 最边上的子节点无子节点\n                if (!node.children[0].childrenCount()) {\n                    return node.children[0]\n                } else {\n                    return this.getChildHeadNode(node.children[0])\n                }\n            } else {\n                return node\n            }\n        },\n        // 获取子节点中层级最深的结尾节点(指数组中结尾位置)\n        getChildLastNode(node) {\n            if (node.childrenCount()) {\n                // 最边上的子节点无子节点\n                if (!node.children[node.childrenCount() - 1].childrenCount()) {\n                    return node.children[node.childrenCount() - 1]\n                } else {\n                    return this.getChildLastNode(node.children[node.childrenCount() - 1])\n                }\n            } else {\n                return node\n            }\n        },\n        // 最左边的节点\n        getChildFarLeftNode(node) {\n            function getNextChildHeadNode(node) {\n                nodes.push(node.children[0]);\n                if (node.children[0].childrenCount()) {\n                    getNextChildHeadNode(node.children[0])\n                }\n            }\n            let nodes = [];\n            nodes.push(node);\n\n            if (node.childrenCount()) {\n                // 最边上的子节点无子节点\n                getNextChildHeadNode(node)\n            }\n            let result_node = nodes.reduce((result, node) => {\n                if (!result.x) {\n                    result = node;\n                    return result;\n                }\n                if ( result.x > node.x) {\n                    result = node\n                }\n                return result\n            }, {});\n\n            return result_node\n        },\n        getChildFarRightNode(node) {\n            function getNextChildHeadNode(node) {\n                nodes.push(node.children[node.childrenCount()-1]);\n                if (node.children[node.childrenCount()-1].childrenCount()) {\n                    getNextChildHeadNode(node.children[node.childrenCount()-1])\n                }\n            }\n            let nodes = [];\n            nodes.push(node);\n\n            if (node.childrenCount()) {\n                // 最边上的子节点无子节点\n                getNextChildHeadNode(node)\n            }\n            let result_node = nodes.reduce((result, node) => {\n                if (!result.x) {\n                    result = node;\n                    return result;\n                }\n                if ( (result.x + this.getSingleNodeWidth(result)) < (node.x + this.getSingleNodeWidth(node))) {\n                    result = node\n                }\n                return result\n            }, {});\n\n            return result_node\n        },\n        // 获取当前节点离他最远的子节点的距离\n        getOffsetYWithHeadNode(node) {\n            let headNode = this.getChildHeadNode(node);\n            return Math.abs(headNode.y - node.y);\n        },\n        getOffsetYWidthLastNode(node) {\n            let lastNode = this.getChildLastNode(node);\n            return Math.abs(lastNode.y - node.y);\n        },\n        getOffsetXBetweenNodes(node1, node2) {\n            return Math.abs(node1.x - node2.x)\n        },\n        getOffsetXWithHeadNode(node) {\n            let headNode = this.getChildHeadNode(node);\n            return this.getOffsetXBetweenNodes(headNode, node)\n        },\n        getOffsetXWidthLastNode(node) {\n            let lastNode = this.getChildLastNode(node);\n            return this.getOffsetXBetweenNodes(lastNode, node);\n        },\n    }\n}());\n\nexport default nodeShapeRelative;\n","import { forEach } from '../utils';\nimport nodeShapeRelative from './nodeShapeRelative';\nimport { TREE } from '../constants';\nfunction drawPoint(paper, x, y) {\n    var point = paper.circle(x, y, 1);\n    point.attr({\n        fill: '#9f1407'\n    })\n}\n/**\n * 子结点重绘的策略工厂\n * @type {Function}\n */\nvar ChildrenRenderFactory = (function(){\n    return {\n        createRenderStrategy: function(node, drawNode, drawEdge, setDrag){\n            var strategy;\n            //如果结点是根结点,则实现第一层结点添加算法\n            if (node.childrenCountIsOdd()) {\n                strategy = new ChildrenRenderStrategy(new OddNodeRender(drawNode, drawEdge, setDrag));\n            } else {\n                strategy = new ChildrenRenderStrategy(new EvenNodeRender(drawNode, drawEdge, setDrag));\n            }\n            return strategy;\n\n        }\n    };\n}());\n\n/**\n * 子结点重绘策略类\n * @param strategy\n * @constructor\n */\nfunction ChildrenRenderStrategy(strategy){\n    this.strategy = strategy;\n}\nChildrenRenderStrategy.prototype.reRenderChildrenNode = function(node){\n    this.strategy.doRender(node);\n};\n\n/**\n * 抽象子结点重绘类\n * @constructor\n */\nfunction AbstractRender(drawNode, drawEdge, setDrag) {\n    this.nodeXInterval = 100;\n    this.nodeYInterval = 60;\n    this.treeNodeXInterval = 60;\n    this.treeNodeYInterval = 100;\n    this.drawNode = drawNode;\n    this.drawEdge = drawEdge;\n    this.setDrag = setDrag;\n}\n// 奇数个节点时渲染方式\nAbstractRender.prototype.commonOddRender = function(father, children, direction) {\n    //获取父结点的中间坐标\n    let hfx = father.x + nodeShapeRelative.getSingleNodeWidth(father)/2;\n    let hfy = father.y + nodeShapeRelative.getSingleNodeHeight(father)/2;\n    // 中间节点坐标\n    let middle_node_index = father.getMiddleChildNodeIndex();\n    let middle_node = children[middle_node_index];\n    // 先渲染中间节点 x坐标 = 父节点右侧x + Ix\n    let middle_node_x = hfx + (nodeShapeRelative.getSingleNodeWidth(father) / 2) + this.nodeXInterval;\n    let middle_node_y = hfy - (nodeShapeRelative.getSingleNodeHeight(middle_node) / 2);\n    this._reRenderNode(middle_node, middle_node_x, middle_node_y);\n    \n    // 渲染中间节点的左/上侧 (反向循环)\n    //\n    for(let i = middle_node_index - 1; i >= 0; i--) {\n        let current_x = middle_node_x;\n        // 下方节点的最头上的子节点\n        let next_head_node = nodeShapeRelative.getChildHeadNode(children[i+1]);\n\n        let current_y = next_head_node.y - this.nodeYInterval - nodeShapeRelative.getSingleNodeHeight(children[i]) - nodeShapeRelative.getOffsetYWidthLastNode(children[i]);\n        this._reRenderNode(children[i], current_x, current_y);\n    }\n\n    // 渲染中间节点的右/下侧 (正向)\n    for(let i = middle_node_index + 1; i < children.length; i++) {\n        let current_x = middle_node_x;\n        let last_last_node = nodeShapeRelative.getChildLastNode(children[i-1]);\n        let current_y = last_last_node.y + nodeShapeRelative.getSingleNodeHeight(children[i-1]) + this.nodeYInterval + nodeShapeRelative.getOffsetYWithHeadNode(children[i]);\n        this._reRenderNode(children[i], current_x, current_y);\n    }\n};\n\n// 偶数个子节点时渲染方式\nAbstractRender.prototype.commonEvenRender = function(father, children, direction) {\n    // 获取父结点的中间坐标\n    let hfx = father.x + nodeShapeRelative.getSingleNodeWidth(father)/2;\n    let hfy = father.y + nodeShapeRelative.getSingleNodeHeight(father)/2;\n    // 中间点右侧的node\n    let middle_node_index = father.getMiddleChildNodeIndex();\n\n    // 中间点(父节点右侧x + Ix , hfy)\n    let middle_x = hfx + (nodeShapeRelative.getSingleNodeWidth(father) / 2) + this.nodeXInterval;\n\n    let middle_y = hfy;\n\n    // 渲染中间点的左/上侧 (反向循环)  先渲染临近中间点的两个节点\n    for(let i = middle_node_index - 1; i >= 0; i--) {\n        if (i === middle_node_index - 1) {\n            let last_x = middle_x;\n            let last_y = middle_y - (this.nodeYInterval / 2) - nodeShapeRelative.getSingleNodeHeight(children[i]) - nodeShapeRelative.getOffsetYWidthLastNode(children[i]);\n            this._reRenderNode(children[i], last_x, last_y);\n        } else {\n            // 等同 奇数的批量渲染\n            let current_x = middle_x;\n            let next_head_node = nodeShapeRelative.getChildHeadNode(children[i+1]);\n\n            let current_y = next_head_node.y - this.nodeYInterval - nodeShapeRelative.getSingleNodeHeight(children[i]) - nodeShapeRelative.getOffsetYWidthLastNode(children[i]);\n            this._reRenderNode(children[i], current_x, current_y);\n        }\n    }\n\n    // 渲染中间节点的右/下侧 (正向)\n    for(let i = middle_node_index; i < children.length; i++) {\n        if (i === middle_node_index) {\n            let next_x = middle_x;\n            let next_y = middle_y + (this.nodeYInterval / 2) + nodeShapeRelative.getOffsetYWithHeadNode(children[i]);\n            this._reRenderNode(children[i], next_x, next_y)\n        } else {\n            let current_x = middle_x;\n            let last_last_node = nodeShapeRelative.getChildLastNode(children[i-1]);\n            let current_y = last_last_node.y + nodeShapeRelative.getSingleNodeHeight(children[i-1]) + this.nodeYInterval + nodeShapeRelative.getOffsetYWithHeadNode(children[i]);\n            this._reRenderNode(children[i], current_x, current_y);\n        }\n    }\n}\n\n// 树状导图 奇数节点数渲染\nAbstractRender.prototype.commonTreeOddRender = function(father, children, direction) {\n    //获取父结点的中间坐标\n    let hfx = father.x + nodeShapeRelative.getSingleNodeWidth(father)/2;\n    let hfy = father.y + nodeShapeRelative.getSingleNodeHeight(father)/2;\n    // 中间节点坐标\n    let middle_node_index = father.getMiddleChildNodeIndex();\n    let middle_node = children[middle_node_index];\n    // 先渲染中间节点 x坐标 = 父节点右侧x + Ix\n    let middle_node_x = hfx - (nodeShapeRelative.getSingleNodeWidth(middle_node)/2);\n    // let middle_node_x = hfx + (nodeShapeRelative.getSingleNodeWidth(father) / 2) + this.nodeXInterval;\n    let middle_node_y = hfy + (nodeShapeRelative.getSingleNodeHeight(father)/2)  + this.treeNodeYInterval;\n    this._reRenderNode(middle_node, middle_node_x, middle_node_y);\n\n    // 渲染中间节点的左/上侧 (反向循环)\n    //\n    for(let i = middle_node_index - 1; i >= 0; i--) {\n        let current_y = middle_node_y;\n        // 下方节点的最头上的子节点\n        let next_head_node = nodeShapeRelative.getChildFarLeftNode(children[i+1]);\n        let current_last_node = nodeShapeRelative.getChildFarRightNode(children[i]);\n        let current_x = next_head_node.x - this.treeNodeYInterval - nodeShapeRelative.getSingleNodeWidth(current_last_node) - nodeShapeRelative.getOffsetXBetweenNodes(current_last_node, children[i]);\n\n        this._reRenderNode(children[i], current_x, current_y);\n    }\n\n    // 渲染中间节点的右/下侧 (正向)\n    for(let i = middle_node_index + 1; i < children.length; i++) {\n        let current_y = middle_node_y;\n        let last_last_node = nodeShapeRelative.getChildFarRightNode(children[i-1]);\n        let current_head_node = nodeShapeRelative.getChildFarLeftNode(children[i]);\n        let current_x = last_last_node.x + nodeShapeRelative.getSingleNodeWidth(last_last_node) + this.treeNodeYInterval + nodeShapeRelative.getOffsetXBetweenNodes(current_head_node, children[i]);\n\n        this._reRenderNode(children[i], current_x, current_y);\n    }\n};\n\n// 树状导图 偶数节点数渲染\nAbstractRender.prototype.commonTreeEvenRender = function(father, children, direction) {\n    // 获取父结点的中间坐标\n    let hfx = father.x + nodeShapeRelative.getSingleNodeWidth(father)/2;\n    let hfy = father.y + nodeShapeRelative.getSingleNodeHeight(father)/2;\n    // 中间点右侧的node\n    let middle_node_index = father.getMiddleChildNodeIndex();\n\n    // 中间点 x 坐标\n    let middle_x = hfx;\n    // 中间点 y = (hfy + Iy , hfy)\n    let middle_y = hfy + (nodeShapeRelative.getSingleNodeHeight(father) / 2) + this.treeNodeYInterval;\n\n    // 渲染中间点的左/上侧 (反向循环)  先渲染临近中间点的两个节点\n    for(let i = middle_node_index - 1; i >= 0; i--) {\n        if (i === middle_node_index - 1) {\n            let last_y = middle_y;\n            let last_last_node = nodeShapeRelative.getChildFarRightNode(children[i]);\n            let last_x = middle_x - (this.treeNodeXInterval / 2) - nodeShapeRelative.getSingleNodeWidth(last_last_node) - nodeShapeRelative.getOffsetXBetweenNodes(last_last_node, children[i]);\n            this._reRenderNode(children[i], last_x, last_y);\n        }\n        else {\n            // 等同 奇数的批量渲染\n            let current_y = middle_y;\n            let next_head_node = nodeShapeRelative.getChildFarLeftNode(children[i+1]);\n            let current_last_node = nodeShapeRelative.getChildFarRightNode(children[i]);\n            let current_x = next_head_node.x - this.treeNodeXInterval - nodeShapeRelative.getSingleNodeWidth(current_last_node) - nodeShapeRelative.getOffsetXBetweenNodes(children[i], current_last_node);\n            this._reRenderNode(children[i], current_x, current_y);\n        }\n    }\n\n    // 渲染中间节点的右/下侧 (正向)\n    for(let i = middle_node_index; i < children.length; i++) {\n        if (i === middle_node_index) {\n            let next_y = middle_y;\n            let next_head_node = nodeShapeRelative.getChildFarLeftNode(children[i]);\n            let next_x = middle_x + (this.treeNodeXInterval / 2) + nodeShapeRelative.getOffsetXBetweenNodes(next_head_node, children[i]);\n            this._reRenderNode(children[i], next_x, next_y)\n        }\n        else {\n            let current_y = middle_y;\n            let last_last_node = nodeShapeRelative.getChildFarRightNode(children[i-1]);\n            let current_head_node = nodeShapeRelative.getChildFarLeftNode(children[i]);\n            let current_x = last_last_node.x + nodeShapeRelative.getSingleNodeWidth(last_last_node) + this.treeNodeXInterval + nodeShapeRelative.getOffsetXBetweenNodes(current_head_node, children[i]);\n            this._reRenderNode(children[i], current_x, current_y);\n        }\n    }\n}\n\nAbstractRender.prototype._reRenderNode = function(node, x, y){\n    // 已经渲染的节点, 移动到指定的点, 如果有子节点, 子节点也会跟着移动\n    if(node.shape){\n        let dx = x - node.x;\n        let dy = y - node.y;\n        node.translate(dx, dy)\n    }\n    //如果节点仍未渲染,则渲染之\n    else {\n        node.x = x;\n        node.y = y;\n        this.drawNode(node);\n    }\n    // this.drawEdge(node.connectFather);\n    // this.setDrag(node)\n\n};\n\nAbstractRender.prototype.doRender = function(node){\n    console.log('该方法应该被覆盖');\n};\n\n/**\n * 渲染奇数个子节点的类\n * @param drawNode\n * @constructor\n */\nfunction OddNodeRender(drawNode, drawEdge, setDrag) {\n    this.drawNode = drawNode;\n    this.drawEdge = drawEdge;\n    this.setDrag = setDrag;\n}\nOddNodeRender.prototype = new AbstractRender();\nOddNodeRender.prototype.constructor = OddNodeRender;\n\nOddNodeRender.prototype.doRender = function(node) {\n    if (node.isTreeMapNode()) {\n        this.commonTreeOddRender(node, node.children, 1);\n    } else {\n        this.commonOddRender(node, node.children, node.direction);\n    }\n}\n\n\n/**\n * 渲染奇数个子节点的类\n * @param drawNode\n * @constructor\n */\nfunction EvenNodeRender(drawNode, drawEdge, setDrag) {\n    this.drawNode = drawNode;\n    this.drawEdge = drawEdge;\n    this.setDrag = setDrag;\n}\nEvenNodeRender.prototype = new AbstractRender();\nEvenNodeRender.prototype.constructor = EvenNodeRender;\n\nEvenNodeRender.prototype.doRender = function(node) {\n    if (node.isTreeMapNode()) {\n        this.commonTreeEvenRender(node, node.children, 1);\n    } else {\n        this.commonEvenRender(node, node.children, node.direction);\n    }\n}\nexport default ChildrenRenderFactory;\n","import Raphael from 'raphael';\n\n/**\n * 画连接线\n * @params sourceBox.x , sourceBox.y 节点左上角坐标\n * @params sourceBox.x2 , sourceBox.y2 节点右下角坐标\n * @param edge\n * @returns {{drawEdge: (function(): *)}}\n * @constructor\n */\nvar EdgeDraw = function(edge){\n    var source = edge.source;\n    var target = edge.target;\n    var paper = source.shape[0].paper;\n    var  shape;\n    var sourceBox = source.shape.getBBox();\n\n    var targetBox = target.shape.getBBox();\n    var isTreeMap = source.isTreeMapNode();\n    // 获取中心点的坐标\n    function getCenterCoordinate(box) {\n        return {\n            x: (box.x + box.x2)/2,\n            y: (box.y + box.y2)/2\n        }\n    }\n\n    /**\n     * 获取起点坐标 由中心坐标推算出\n     * @param direction 1 -1 移动的左右或上下方向\n     * @param box 宽/高\n     * @param centerCoor 中心坐标\n     * @param isTreeMap 后期可以用mapNode代替 方便增加多种导图模式\n     */\n    function getPathCoordinate(position, centerCoor, direction, box, isTreeMap) {\n        if (!['start', 'end'].includes(position)) return;\n        var isStart = position === 'start';\n        var _offsetX = isTreeMap ? 0 : (isStart ? direction : -direction) * (box.width / 2);\n        var _offsetY = isTreeMap ? (isStart ? direction : -direction) * (box.height / 2) : 0;\n        var x = centerCoor.x + _offsetX;\n        var y = centerCoor.y + _offsetY;\n        return {\n            x,\n            y\n        }\n    }\n\n    /**\n     * 获取贝塞尔曲线控制点的位置 兼容不同的导图模式\n     * @param position\n     * @param coor\n     * @param direction\n     * @param controller\n     * @param isTreeMap\n     * @returns {{x: *, y: *}}\n     */\n    function getControllerCoordinate(position, coor, direction, controller, isTreeMap) {\n        if (!['start', 'end'].includes(position)) return;\n\n        var isStart = position === 'start';\n        var _d = isStart ? direction : -direction;\n        var _ckx = isStart ? 'StartOffsetX' : 'EndOffsetX';\n        var _cky = isStart ? 'StartOffsetY' : 'EndOffsetY';\n\n        var _offsetX = isTreeMap ? 0 : _d * controller[_ckx];\n\n        var _offsetY = isTreeMap ? _d * controller[_cky] : 0;\n        var x = coor.x + _offsetX;\n        var y = coor.y + _offsetY;\n        return {\n            x,\n            y\n        }\n    }\n\n    // 画根结点到第一层节点的曲线\n    function drawRootCurve(){\n        var startCenterCoor = getCenterCoordinate(sourceBox);\n        var x2 = (targetBox.x + targetBox.x2)/2 - target.direction * targetBox.width/2;\n        var y2 = (targetBox.y + targetBox.y2)/2;\n        var k1 = 0.8;\n        var k2 = 0.2;\n        var pathPoints = {\n            x1: startCenterCoor.x,\n            y1: startCenterCoor.y,\n            x2: x2,\n            y2: y2,\n            x3: x2 - k1 * (x2 - startCenterCoor.x),\n            y3: y2 - k2 * (y2 - startCenterCoor.y)\n\n        };\n        // 调试用 画圆点\n\n        // drawPoint(paper, pathPoints.x3, pathPoints.y3)\n\n\n        var edgePath = paper.path(Raphael.fullfill(\"M{x1},{y1}Q{x3},{y3},{x2},{y2}\",pathPoints));\n        edgePath.attr({\n            'stroke': '#999',\n            'stroke-width': 2\n        });\n        // 向下移动 ( z轴的下 )\n        edgePath.toBack();\n        shape = paper.set().push(edgePath);\n\n        //如果target存在connectFather,重画这条边\n        if(edge.shape){\n            edge.shape[0].remove();\n            edge.shape = shape;\n        }{\n            edge.shape = shape;\n        }\n    }\n\n    // 贝塞尔曲线 树状图 和 横向图三层及以上节点用\n    function drawBezierCurve(){\n        var startCenterCoor = getCenterCoordinate(sourceBox);\n        // 结束节点的中心点\n        var endCenterCoor = getCenterCoordinate(targetBox);\n        // 默认起始点在节点的左右两边 开始画贝塞尔曲线\n        var startCoor = getPathCoordinate('start', startCenterCoor, target.direction, sourceBox, isTreeMap);\n        // 节点在右边, 则连接点在节点左侧\n        var endCoor = getPathCoordinate('end', endCenterCoor, target.direction, targetBox, isTreeMap);\n        var NormalController = {\n            StartOffsetX: 20,\n            StartOffsetY: 10,\n            EndOffsetX: 30,\n            EndOffsetY: 10\n        }\n\n        var TreeMapController = {\n            StartOffsetX: 10,\n            StartOffsetY: 20,\n            EndOffsetX: 10,\n            EndOffsetY: 30\n        }\n        // 不同策略\n        var currentController = isTreeMap ? TreeMapController : NormalController;\n\n        var controllerStartCoor = getControllerCoordinate('start', startCoor, target.direction, currentController, isTreeMap);\n        var controllerEndCoor = getControllerCoordinate('end', endCoor, target.direction, currentController, isTreeMap);\n        // drawPoint(paper, controllerStartCoor.x, controllerStartCoor.y);\n\n        var  pathPoints = {\n            startX: startCoor.x,\n            startY: startCoor.y,\n            endX: endCoor.x,\n            endY: endCoor.y,\n            startControllerX: controllerStartCoor.x,\n            startControllerY: controllerStartCoor.y,\n            endControllerX: controllerEndCoor.x,\n            endControllerY: controllerEndCoor.y\n        };\n\n        var edgePath = paper.path(Raphael.fullfill(\"M{startX},{startY}C{startControllerX} {startControllerY},{endControllerX} {endControllerY},{endX} {endY}\",pathPoints));\n        edgePath.attr({\n            'stroke': '#999',\n            'stroke-width': 2\n        });\n        // 向下移动 ( z轴的下 )\n        edgePath.toBack();\n        shape = paper.set().push(edgePath);\n        //如果target存在connectFather,重画这条边\n        if(edge.shape){\n            edge.shape[0].remove();\n            // edge.shape[1].remove();\n            // edge.shape[2].remove();\n            edge.shape = shape;\n        }{\n            edge.shape = shape;\n        }\n    }\n\n    return {\n        drawEdge: function(){\n            if (isTreeMap) {\n                drawBezierCurve();\n            } else {\n                if(source.checkIsRootNode()){\n                    drawRootCurve();\n                }else{\n                    drawBezierCurve();\n                }\n            }\n\n            return shape;\n        }\n    }\n};\n\n\nfunction drawPoint(paper, x, y) {\n    var point = paper.circle(x, y, 1);\n    point.attr({\n        fill: '#9f1407'\n    })\n}\nexport default EdgeDraw;\n","import Raphael from 'raphael';\nimport { forEach } from '../utils';\n\n/**\n * 拖动模块\n */\nlet Drag = function(aNode, options={}){\n    let node = aNode;\n    let viewportHandle = options.viewportHandle;\n\n    let paper = options.paper\n    let graph = options.graph;\n\n    //克隆的占位节点\n    let cloneShape = null;\n    //当前节点可添加的父节点BBox的集合\n    let addableBoxSet = null;\n    //最后一个重合的节点id\n    let lastOverlapId = null;\n    //当前重合的节点id\n    let overlapNodeId = null;\n\n    let enableRender = {\n        canRender: options.canRender || true\n    }\n\n    node.shape.click(function (e) {\n        console.log(`e ==>`, e);\n    })\n\n\n\n    /**\n     * 取得克隆的shape：用于占位\n     * @param node\n     * @returns {*}\n     * @private\n     */\n    function _cloneNodeShape(node){\n\n        let newRect = node.shape[1].clone();\n        newRect.attr({\n            r: 4\n        });\n        let newLabel = node.shape[0].clone();\n        let newShape = paper.set().push(newLabel).push(newRect);\n        return newShape;\n    }\n\n    /**\n     * 获得可成为当前节点的父节点的Box集合\n     * @returns {{}}\n     * @private\n     */\n    function _getAddableBBoxSet(){\n        let addableBBoxSet = {};\n        let addableSet = graph.getParentAddableNodeSet(node);\n\n        forEach(addableSet, function(curNode){\n            addableBBoxSet[curNode.id] = curNode.shape.getBBox();\n        });\n        return addableBBoxSet;\n    }\n\n\n    /**\n     * 获得与当前节点重合的节点的id\n     * @returns {*}\n     * @private\n     */\n    function _getOverlapNodeId(){\n        let nodeBBox = node.shape.getBBox();\n        for(let id in addableBoxSet){\n            let curBBox = addableBoxSet[id];\n            if(Raphael.isBBoxIntersect(nodeBBox, curBBox)){\n                return id;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * 将子节点及边设为透明\n     * @param children\n     * @private\n     */\n    function _setChildrenOpacity(children){\n        children.forEach( child => {\n            child.shape.opacityShape(child);\n            child.connectFather.shape.opacityShape();\n            _setChildrenOpacity(child.children);\n        });\n    }\n\n    /**\n     * 将透明子节点及边设为原样\n     * @param children\n     * @private\n     */\n    function _setChildrenNormal(children){\n        children.forEach( child => {\n            child.shape.unOpacityShape();\n            child.connectFather.shape.unOpacitShape();\n            _setChildrenNormal(child.children);\n        });\n    }\n\n    function moveFnc(dx, dy){\n        //如果不可渲染，则不可调用move\n        if(!enableRender.canRender || !node.isDraggable()) { return false; }\n\n        //移动节点时将鼠标的样式设为move\n        node.shape[1].node.style.cursor = 'move';\n\n        node.shape.transform('t' + dx + ',' + dy);\n\n        overlapNodeId = _getOverlapNodeId();\n\n        let nodes = graph.getNodes();\n\n        if(overlapNodeId !== lastOverlapId){\n            if(overlapNodeId){\n                nodes[overlapNodeId].shape.overlapShape();\n            }\n            if(lastOverlapId){\n\n                nodes[lastOverlapId].shape.unOverlapShape(nodes[lastOverlapId]);\n            }\n        }\n\n        lastOverlapId = overlapNodeId;\n    }\n\n    function startFnc(){\n        //如果不可渲染，则不可调用start\n        if(!enableRender.canRender) { return false; }\n\n        //设置节点的选择渲染\n        graph.setSelected(node);\n        if ( !node.isDraggable() ) return false;\n        //创一个克隆的节点占位\n        cloneShape = _cloneNodeShape(node);\n\n        //将节点设为未选择样式的透明样式\n        node.shape.dragNodeOpacityShape(node);\n        cloneShape.opacityShape();\n        //@workaround: 改为当前节点，及其子节点和边透明\n        _setChildrenOpacity(node.children);\n\n        //获得当前节点可添加的父节点BBox的集合\n        addableBoxSet = _getAddableBBoxSet();\n        lastOverlapId = null;\n\n    }\n    function endFnc(){\n        //如果不可渲染，则不可调用end\n        if(!enableRender.canRender || !node.isDraggable()) { return false; }\n\n        \n\n        cloneShape.remove();\n        cloneShape = null;\n\n\n        //@workaround：将节点设为被选择样式\n        node.shape.selectedShape(node);\n\n        _setChildrenNormal(node.children);\n\n        \n       \n        if(lastOverlapId){\n            let nodes = graph.getNodes();\n            let lastOverlapNode = nodes[lastOverlapId];\n            lastOverlapNode.shape.nodeShape(lastOverlapNode);\n        }\n\n        overlapNodeId = _getOverlapNodeId();\n\n        if(overlapNodeId){\n            //节点改变父节点后的操作\n            let nodes = graph.getNodes();\n            graph.setParent(parseInt(overlapNodeId), node.id);\n        }\n\n        node.shape.transform('t' + 0 + ',' + 0);\n        node.shape[1].node.style.cursor = 'default';\n    }\n\n    return {\n        setDrag: function(){\n            if(!node.checkIsRootNode()){\n                node.shape.drag(moveFnc, startFnc, endFnc);\n            }else{\n                node.shape.mousedown(function(event){\n                    if(!enableRender.canRender) { return false; }\n                    viewportHandle.mousedownHandle(event);\n                });\n                node.shape.mousemove(function(event){\n                    if(!enableRender.canRender) { return false; }\n\n                    viewportHandle.mousemoveHandle(event);\n\n                });\n                node.shape.mouseup(function(event){\n                    if(!enableRender.canRender) { return false; }\n                    viewportHandle.mouseupHandle(event);\n                });\n\n\n                node.shape.mousedown(function(){\n                    if(!enableRender.canRender) { return false; }\n                    graph.setSelected(node);\n                });\n                node.shape.mousemove(function(){\n                    if(!enableRender.canRender) { return false; }\n                    if(viewportHandle.isDragging()){\n                    }\n                });\n                node.shape.mouseup(function(){\n                    if(!enableRender.canRender) { return false; }\n\n                });\n\n            }\n        }\n\n    };\n};\nexport default Drag;\n","import Raphael from 'raphael';\nimport shapeCustomAttr from './shapeCustomAttr';\nimport Viewport from './Viewport';\nimport nodeShapeRelative from './nodeShapeRelative';\nimport ChildrenRenderFactory from './ChildrenRenderFactory';\nimport EdgeDraw from './EdgeDraw';\nimport Drag from './Drag';\nimport { LEFT, RIGHT } from '../constants';\nimport { forEach } from '../utils';\n\n\n\nexport default class Renderer {\n    constructor(options, graph) {\n        this.graph = graph;\n\n        this.canvasDom = document.getElementById(options.canvasId);\n        this.paper = new Raphael(this.canvasDom);\n\n\n        this.canvasClickCb = options.canvasClickCb;\n        this.nodeClickCb = options.nodeClickCb;\n        // 视野设置\n        this.viewportHandle = Viewport(this.canvasDom, this.paper);\n        this.viewportHandle.setViewportDrag();\n        // this.viewportHandle.setViewportScale(2);\n\n        shapeCustomAttr.init(this.paper);\n\n        // svg点击事件:如果点击的是canvas,取消selected\n        this.setCanvasClick();\n    }\n\n    /**\n     * 新增节点时的渲染\n     * @param node\n     */\n    addNodeRender(node) {\n        // 节点渲染\n        if(node.x && node.y) {\n            this.drawNode(node); \n        }\n        // 如果没有设置x,y.则按照父节点的位置设置之\n        else {\n            this._resetBrotherPosition(node);\n            // this._reRenderChildrenNode(node.father);\n            // let fnodeIndex = node.father.getChildNodeIndex(node.id);\n            // console.log(`nodeIndex ==>`, nodeIndex);\n            // 向上递归移动父节点的同级节点,只有一个点时不用移动node.father.childrenCount() > 0 || node.childrenCount() > 1\n            if(node.father && node.father.childrenCount() > 1) {\n                // this._resetBrotherPosition(node);\n\n                if (node.father.father) {\n                    // let fnodeIndex = node.father.father.getChildNodeIndex(node.father.id);\n                    // let beforeNodeOffsetY = node.father.children[0].y - 60 - node.father;\n                }\n            }\n        }\n\n        // 边渲染\n        if(node.connectFather){\n            this._drawEdge(node.connectFather);\n        }\n\n        // 设置拖动\n        this._setDrag(node);\n\n        node.shape.mousedown(() => {\n            this.nodeClickCb && this.nodeClickCb(node.label);\n        });\n    }\n\n    getCanvasWidth() {\n        return this.canvasDom.clientWidth;\n    }\n\n    /**\n     * 删除节点渲染需要先断开父节点的children和connectChildren连接才能重新调整当前节点层的节点\n     *\n     * @param node\n     */\n    removeNodeRender(node) {\n        // 删除节点时, 重新渲染其兄弟节点\n        this.removeNodeAndChildrenShape(node);\n\n        // this._reRenderChildrenNode(node.father);\n        if(node.father){\n            this._resetBrotherPosition(node.father);\n        }\n    }\n\n    /**\n     * 移动节点的渲染: 节点移动渲染(通过设置attr的x和y属性),边重绘\n     * @param node\n     * @param dx\n     * @param dy\n     */\n    translateSingleNodeRender(node, dx, dy) {\n        if(node.shape){\n            let rect = node.shape[1];\n            let posX = rect.attr('x');\n            let posY = rect.attr('y');\n            rect.attr({ x: posX + dx,  y: posY + dy} );\n\n            let label = node.shape[0];\n            let labelX = label.attr('x');\n            let labelY = label.attr('y');\n            label.attr( {x: labelX + dx, y: labelY + dy} );\n        }\n\n\n        //移动节点后,边重画\n        if(node.shape && node.connectFather){\n            this._drawEdge(node.connectFather);\n        }\n    }\n\n    /**\n     * 选择节点时的渲染\n     * @param node 被选中的节点\n     * @param oldSelected: 之前被选中的节点\n     */\n    setSelectedRender(node, oldSelected) {\n        if(node && node.shape){\n            node.shape.selectedShape(node);\n        }\n        if(oldSelected && oldSelected.shape){\n            oldSelected.shape.unSelectedShape(oldSelected);\n\n        }\n    }\n\n    /**\n     * 节点文本设置渲染\n     * @param node\n     */\n    setLabelRender(node) {\n        //取得原来的长度\n        let oldWidth = nodeShapeRelative.getSingleNodeWidth(node);\n\n        //设置文本的shape\n        node.shape.nodeShape(node);\n\n        if(this.graph.selected){\n            this.graph.selected.shape.selectedShape(node);\n        }\n\n        let newWidth = nodeShapeRelative.getSingleNodeWidth(node);\n        let gap = newWidth - oldWidth;\n\n        // TODO 树状导图 改变节点文本后会出现 父节点的x比最边上子节点的x还小的问题.  限制每个节点的最大宽度\n        this._resetBrotherPosition(node);\n\n        //如果改变label的节点为右方向节点,则只向右移动该节点的子节点\n        if(node.direction === RIGHT){\n            node.children.forEach( child => {\n                child.translate(gap, 0);\n            });\n\n            //右节点的边需要重画\n            if(node.shape && node.connectFather){\n                this._drawEdge(node.connectFather);\n            }\n\n        }\n        //如果改变label的节点为左方向节点,则向左移动该节点(translate回递归)和toolbar\n        else if(node.direction === LEFT){\n            node.translate(-gap, 0);\n        }\n        //如果节点为根结点\n        else if(node.checkIsRootNode()){\n            node.translate(-gap/2, 0);\n            node.children.forEach(child => {\n                if(child.direction === 1){\n                    child.translate(gap, 0);\n                } else if(child.direction === -1){\n                    child.translate(-gap/2, 0);\n                }\n            });\n        }\n    }\n\n\n    /**\n     * 根结点渲染\n     * @param node\n     */\n    rootNodeRender(rootNode) {\n        let oldWidth = nodeShapeRelative.getSingleNodeWidth(rootNode);\n\n        rootNode.shape.nodeShape(rootNode);\n        let newWidth = nodeShapeRelative.getSingleNodeWidth(rootNode);\n        let gap = newWidth - oldWidth;\n\n        rootNode.translate(-gap/2, 0);\n\n        rootNode.children.forEach( child => {\n            if(child.direction === RIGHT) {\n                child.translate(gap, 0);\n            }\n        });\n    }\n\n    /**\n     * 创建node的shape\n     * @param node\n     * @private\n     */\n    drawNode(node) { \n        // 创建node的shape对象\n        let paper = this.paper;\n        // 已设置node的x和y时才能渲染节点\n        let label = paper.text(node.x, node.y, node.label);\n        let textBox = label.getBBox();\n        // 得到矩形的长度\n        let rectWidth = textBox.width;\n        let rectHeight = textBox.height;\n\n        let rect = paper.rect(node.x, node.y,\n            nodeShapeRelative.nodeDefaultWidth,\n            nodeShapeRelative.nodeDefaultHeight, 4)\n            .data('id', node.id);\n        label.toFront();\n\n\n        node.shape = paper.set().push(label).push(rect);\n        node.shape.nodeShape(node);\n    }\n\n    /**\n     * 点击画布时,取消graph的选择\n     */\n    setCanvasClick() {\n        this.canvasDom.addEventListener('mousedown', (event) => {\n            if(event.target.nodeName === 'svg'){\n                this.graph.setSelected(null);\n                this.canvasClickCb && this.canvasClickCb();\n                // todo 填空取消 \n            }\n        });\n    }\n\n    setParentRender(node) {\n\n        var childrenWithShapeCount1 = node.father.childrenWithShapeCount();\n\n        this._reRenderChildrenNode(node.father);\n        var childrenWithShapeCount2 = node.father.childrenWithShapeCount();\n\n        //向上递归移动父节点的同级节点,只有一个点时不用移动\n        if(node.father && node.father.childrenCount() > 1) {\n            if(childrenWithShapeCount2 - childrenWithShapeCount1 <= 1){\n                // this._resetBrotherPosition(node.father, nodeShapeRelative.getNodeAreaHeight(node), nodeShapeRelative.getNodeAreaWidth(node));\n            }\n        }\n\n        if(node.connectFather){\n            this._drawEdge(node.connectFather);\n        }\n        \n        //设置拖动\n        this._setDrag(node);\n        node.children.forEach( child => {\n            this.setParentRender(child);\n        });\n    }\n\n    /**\n     * 创建edge的shape,如果已存在则删除原边重绘(重新设置edge的shape)\n     * @param edge 边对象\n     */\n    _drawEdge(edge) {\n        let edgeDraw = EdgeDraw(edge);\n        edgeDraw.drawEdge();\n    }\n\n    /**\n     * 重新设置当前节点的子节点的位置\n     * @param node 当前节点\n     * @private\n     */\n    _reRenderChildrenNode(node) {\n        let childrenRenderStrategy = ChildrenRenderFactory.createRenderStrategy(node, this.drawNode.bind(this), this._drawEdge.bind(this), this._setDrag.bind(this));\n        childrenRenderStrategy.reRenderChildrenNode(node);\n    }\n\n    /**\n     * 调整当前节点的兄弟节点的位置\n     * @params node 新增节点的父节点\n     * @params nodeAreaHeight 需要调整的高度(一般为最初改变的节点的高度的一半)\n     */\n    _resetBrotherPosition(node, nodeAreaHeight, nodeAreaWidth) {\n        let _this = this;\n\n        //递归移动父节点的兄弟节点, 直到根节点\n        function _resetFatherNodePosition(node) {\n            node.father && _this._reRenderChildrenNode(node.father);\n            if( node.father && node.father.father) {\n                _resetFatherNodePosition(node.father);\n            }\n        }\n\n        function _resetChildNodePosition(node) {\n            node.childrenCount() && _this._reRenderChildrenNode(node);\n            if (node.childrenCount()) {\n                node.children.forEach( child => {\n                    _resetChildNodePosition(child)\n                })\n            }\n        }\n        _resetChildNodePosition(node);\n        _resetFatherNodePosition(node);\n    }\n\n    /**\n     * 递归删除节点的shape\n     * @param node\n     * @private\n     */\n    removeNodeAndChildrenShape(node) {\n        //删除节点和边的shape\n        if(node.shape){\n            node.shape.remove();\n            node.shape = null;\n        }\n        if(node.connectFather.shape){\n            node.connectFather.shape.remove();\n            node.connectFather = null;\n        }\n\n        node.children.forEach( child => {\n            this.removeNodeAndChildrenShape(child);\n        });\n    }\n\n    /**\n     * 设置node的拖动\n     * @param node\n     * @private\n     */\n    _setDrag(node) {\n\n        let DragHandle = Drag(node, {\n            viewportHandle: this.viewportHandle,\n            paper: this.paper,\n            graph: this.graph\n        });\n        DragHandle.setDrag();\n    }\n\n\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"view-controller\"},[_c('button',{staticClass:\"toolbar-btn btn btn-default btn-sm btn-success node-plus\",on:{\"click\":_vm.minusScale}},[_vm._v(\"- \")]),_c('span',[_vm._v(_vm._s(_vm.scale))]),_c('button',{staticClass:\"toolbar-btn btn btn-default btn-sm btn-success node-plus\",on:{\"click\":_vm.plusScale}},[_vm._v(\"+ \")]),_c('div',[_c('span',[_vm._v(\"右侧最大节点数\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.rightNodeMaxCount),expression:\"rightNodeMaxCount\"}],on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.rightNodeMaxCount=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},_vm._l((_vm.rightNodeMaxCounts),function(item){return _c('option',{key:item,domProps:{\"value\":item}},[_vm._v(_vm._s(item))])}),0)]),_c('button',{staticClass:\"toolbar-btn btn btn-default btn-sm btn-success node-btn disabled\",on:{\"click\":_vm.addNode}},[_vm._v(\"添加节点\")]),_c('button',{staticClass:\"toolbar-btn btn btn-default btn-sm btn-danger node-btn disabled\",on:{\"click\":_vm.removeNode}},[_vm._v(\"删除节点 \")]),_c('button',{staticClass:\"toolbar-btn btn btn-default btn-sm btn-success\",on:{\"click\":_vm.toggleDraggable}},[_vm._v(\"暂不支持拖拽节点 \")]),_c('button',{staticClass:\"toolbar-btn btn btn-default btn-sm\",on:{\"click\":_vm.saveData}},[_vm._v(\"保存数据(console)\")]),_c('button',{staticClass:\"toolbar-btn btn btn-default btn-sm\",on:{\"click\":function($event){_vm.$emit('updateMapDate', _vm.randomTree())}}},[_vm._v(\"替换数据 \")]),_c('div',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.isTreeMap),expression:\"isTreeMap\"}],staticClass:\"check-map-mode\",attrs:{\"type\":\"checkbox\",\"id\":\"check-map-mode\"},domProps:{\"checked\":Array.isArray(_vm.isTreeMap)?_vm._i(_vm.isTreeMap,null)>-1:(_vm.isTreeMap)},on:{\"change\":function($event){var $$a=_vm.isTreeMap,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.isTreeMap=$$a.concat([$$v]))}else{$$i>-1&&(_vm.isTreeMap=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.isTreeMap=$$c}}}}),_c('label',{attrs:{\"for\":\"check-map-mode\"}},[_vm._v(\"树状导图\")])]),_c('div',{staticClass:\"label-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.currentText),expression:\"currentText\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\"},domProps:{\"value\":(_vm.currentText)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.currentText=$event.target.value}}}),_c('button',{staticClass:\"btn btn-default btn-sm node-btn\",on:{\"click\":_vm.setGraphText}},[_vm._v(\"确定\")])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"view-controller\">\n        <button @click=\"minusScale\" class=\"toolbar-btn btn btn-default btn-sm btn-success node-plus\">-\n        </button>\n        <span>{{scale}}</span>\n        <button @click=\"plusScale\" class=\"toolbar-btn btn btn-default btn-sm btn-success node-plus\">+\n        </button>\n        <div>\n            <span>右侧最大节点数</span>\n            <select v-model=\"rightNodeMaxCount\">\n                <option :value=\"item\" v-for=\"item in rightNodeMaxCounts\" :key=\"item\">{{ item }}</option>\n            </select>\n        </div>\n        <button class=\"toolbar-btn btn btn-default btn-sm btn-success node-btn disabled\" @click=\"addNode\">添加节点</button>\n        <button class=\"toolbar-btn btn btn-default btn-sm btn-danger node-btn disabled\" @click=\"removeNode\">删除节点\n        </button>\n        <button class=\"toolbar-btn btn btn-default btn-sm btn-success\" @click=\"toggleDraggable\">暂不支持拖拽节点\n        </button>\n        <button class=\"toolbar-btn btn btn-default btn-sm\" @click=\"saveData\">保存数据(console)</button>\n        <button class=\"toolbar-btn btn btn-default btn-sm\" @click=\"$emit('updateMapDate', randomTree())\">替换数据\n        </button>\n        <div>\n            <input type=\"checkbox\" id=\"check-map-mode\" class=\"check-map-mode\" v-model=\"isTreeMap\">\n            <label for=\"check-map-mode\">树状导图</label>\n        </div>\n        <div class=\"label-group\">\n            <input type=\"text\" class=\"form-control\" v-model=\"currentText\">\n            <button class=\"btn btn-default btn-sm node-btn\" @click=\"setGraphText\">确定</button>\n        </div>\n    </div>\n</template>\n\n<script>\n    import {cloneDeep} from 'lodash-es';\n    import {forEach} from '../libs/utils';\n\n    export default {\n        name: 'ViewController',\n        props: {\n            childNodeCanDrag: {\n                type: Boolean,\n                default: true\n            },\n            renderer: {},\n            graph: {},\n        },\n        data() {\n            return {\n                currentText: '',\n                isTreeMap: true,\n                scale: 1,\n                rightNodeMaxCount: 5,\n                rightNodeMaxCounts: [2, 3, 4, 5, 6, 7, 8]\n            }\n        },\n        watch: {\n            isTreeMap(val) {\n                this.$emit('updateTreeMap', val ? 1 : 0);\n            },\n            rightNodeMaxCount(count) {\n                this.graph.setRightNodeMaxCount(count);\n            }\n        },\n        methods: {\n            setGraphText() {\n                this.currentText && this.graph.setLabel(this.currentText);\n            },\n            addNode() {\n                this.graph.addNode();\n            },\n            removeNode() {\n                this.graph.removeNode();\n            },\n            toggleDraggable() {\n                return;\n                this.$emit('update:childNodeCanDrag', !this.childNodeCanDrag)\n            },\n            saveData() {\n                let rootNode = this.renderer.graph.getRootNode();\n                // let rootCopy = $.extend(true, {}, rootNode);\n                // let rootCopy = cloneDeep(rootNode);\n                let tree = cloneDeep(rootNode);\n                let data = this.formatData(tree);\n                console.log(`保存的数据 ==>`, data);\n            },\n            parseNode(node) {\n                let newNode;\n                let {direction, isRootNode, id, label, isTreeNode, children} = node;\n                newNode = {direction, isRootNode, id, label, isTreeNode, children};\n                return newNode;\n            },\n            formatData(tree) {\n                if(tree.children && tree.children.length) {\n                    return {\n                        id: tree.id,\n                        label: tree.label,\n                        isRootNode: !!tree.isRootNode,\n                        children: tree.children.map( node => this.formatData(node))\n                    }\n                }else {\n                    return {\n                        id: tree.id,\n                        label: tree.label,\n                        isRootNode: !!tree.isRootNode,\n                        children: []\n                    }\n                }\n            },\n            randomTree() {\n                let rootNode = {\n                    isRootNode: true,\n                    id: 0,\n                    label: `根节点-${this.randomNumber()}`,\n                    children: []\n                };\n                let nodeTemplate = {\n                    direction: 1,\n                    id: 0,\n                    label: '',\n                    children: []\n                };\n                let childNodeCount = this.randomNumber(1, 5);\n                for (let i = 1; i < childNodeCount; i++) {\n                    nodeTemplate.id = i;\n                    nodeTemplate.label = `节点${i}-${this.randomNumber()}`;\n                    rootNode.children.push(nodeTemplate)\n                }\n                return rootNode;\n            },\n            randomNumber(min = 10, max = 100) {\n                return Math.floor(Math.random() * max + min);\n            },\n            minusScale() {\n                let scale = this.scale;\n                scale -= 0.5;\n                if (scale < 0.5) {\n                    scale = 0.5;\n                }\n\n                this.renderer.viewportHandle.setViewportScale(scale);\n                this.scale = scale;\n            },\n            plusScale() {\n                let scale = this.scale;\n                scale += 0.5;\n                if (scale > 5) {\n                    scale = 5;\n                }\n\n                this.renderer.viewportHandle.setViewportScale(scale);\n                this.scale = scale;\n            },\n\n        }\n    }\n</script>\n\n<style lang=\"less\">\n    .view-controller {\n        width: 100%;\n        height: 50px;\n        top: 0;\n        left: 0;\n        -webkit-box-sizing: border-box;\n        -moz-box-sizing: border-box;\n        box-sizing: border-box;\n        -webkit-border-radius: 3px;\n        -moz-border-radius: 3px;\n        border-radius: 3px;\n        background: #b2b2b2;\n        padding: 10px;\n        z-index: 1000;\n        display: flex;\n        /*justify-content: center;*/\n        align-items: center;\n\n        &:hover {\n            box-shadow: 1px 1px 4px #b9afaf;\n        }\n\n        button {\n            margin: 0 6px 0 6px;\n        }\n\n        .check-map-mode {\n            -webkit-appearance: checkbox;\n        }\n    }\n</style>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ViewController.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ViewController.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ViewController.vue?vue&type=template&id=9c1536ee&\"\nimport script from \"./ViewController.vue?vue&type=script&lang=js&\"\nexport * from \"./ViewController.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ViewController.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n    <div class=\"demo-svg\">\n        <div class=\"mindmap\">\n            <div class=\"mindmap-main\">\n                <view-controller ref=\"viewController\"\n                                 :childNodeCanDrag.sync=\"childNodeCanDrag\"\n                                 :graph=\"graph\"\n                                 :renderer=\"renderer\"\n                                 @updateTreeMap=\"updateTreeMap\"\n                                 @updateMapDate=\"updateMapDate\"></view-controller>\n                <div id=\"mindmapCanvas\"></div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script type=\"text/javascript\">\n    import './index.less';\n    import Graph from './libs/Graph';\n    import Renderer from './libs/Renderer';\n    import $ from 'jquery'\n    import {forEach} from './libs/utils';\n    import {cloneDeep} from 'lodash-es';\n    import ViewController from './components/ViewController';\n\n    export default {\n        components: {\n            ViewController\n        },\n        data() {\n            return {\n                childNodeCanDrag: false,\n                graph: null,\n                renderer: null,\n                scale: 1,\n                isTreeMap: 1,\n                tree: {\n                    children: [\n                        {\n                            direction: 1,\n                            isRootNode: false,\n                            id: 1,\n                            label: '节点1',\n                            children: [\n                                {\n                                    direction: 1,\n                                    isRootNode: false,\n                                    id: 3,\n                                    label: '节点3',\n                                },\n                                {\n                                    direction: 1,\n                                    isRootNode: false,\n                                    id: 4,\n                                    label: '节点4',\n                                }\n                            ]\n                        },\n                        {\n                            direction: 1,\n                            isRootNode: false,\n                            id: 2,\n                            label: '节点2',\n                            children: [\n                                {\n                                    direction: 1,\n                                    isRootNode: false,\n                                    id: 5,\n                                    label: '节点5',\n                                },\n                                {\n                                    direction: 1,\n                                    isRootNode: false,\n                                    id: 6,\n                                    label: '节点6',\n                                }\n                            ]\n                        },\n                    ],\n                    direction: -1,\n                    isRootNode: true,\n                    id: 0,\n                    label: '根节点'\n                },\n            }\n        },\n        watch: {\n            childNodeCanDrag(val) {\n                // 控制增加node时canDrag\n                this.renderer.graph.toggleChildNodeCanDrag(val);\n                let nodes = this.getAllNodes();\n                // 控制已有nodes canDrag\n                this.renderer && this.toggleNodeDraggable(nodes, val);\n            }\n        },\n        methods: {\n            randomTree() {\n                let rootNode = {\n                    direction: 1,\n                    isRootNode: true,\n                    id: 0,\n                    label: `根节点-${this.randomNumber()}`,\n                    children: {}\n                };\n                let nodeTemplate = {\n                    direction: 1,\n                    isRootNode: false,\n                    id: 0,\n                    label: '',\n                    children: {}\n                };\n                let childNodeCount = this.randomNumber(1, 10);\n                for (let i = 1; i < childNodeCount; i++) {\n                    nodeTemplate.id = i;\n                    nodeTemplate.label = `节点${i}-${this.randomNumber()}`;\n                    rootNode.children[i] = {\n                        ...nodeTemplate\n                    };\n                }\n                return rootNode;\n            },\n            randomNumber(min = 10, max = 100) {\n                return Math.floor(Math.random() * max + min);\n            },\n            toggleDraggable() {\n                this.childNodeCanDrag = !this.childNodeCanDrag;\n            },\n            toggleNodeDraggable(nodes, drag) {\n                forEach(nodes, (node) => {\n                    node.setNodeDraggable((drag));\n                })\n            },\n            updateTreeMap(treeMap) {\n                this.isTreeMap = treeMap;\n                this.updateMapDate(this.tree);\n            },\n            getAllNodes() {\n                return this.renderer.graph.getNodes();\n            },\n            removeAllChildNodes() {\n                let nodes = this.getAllNodes();\n                forEach(nodes, (node) => {\n                    if (node.isRootNode) return;\n                    this.renderer.removeNodeRender(node);\n                })\n            },\n            initMap() {\n                const that = this;\n                this.graph = new Graph();\n                this.renderer = new Renderer({\n                    canvasId: 'mindmapCanvas',\n                    canDrag: that.childNodeCanDrag,\n                    canvasClickCb: () => {\n                        $('.label-group input').val('');\n                        $('.node-btn').addClass('disabled');\n                    },\n                    nodeClickCb: (label) => {\n                        that.$refs.viewController.currentText = label;\n                        $('.node-btn').removeClass('disabled');\n                    }\n                }, {\n                    setSelected: that.graph.setSelected.bind(that.graph),\n                    getParentAddableNodeSet: that.graph.getParentAddableNodeSet.bind(that.graph),\n                    getSelected: that.graph.getSelected.bind(that.graph),\n                    getNodes: that.graph.getNodes.bind(that.graph),\n                    getRootNode: that.graph.getRootNode.bind(that.graph),\n                    setParent: that.graph.setParent.bind(that.graph),\n                    toggleChildNodeCanDrag: that.graph.toggleChildNodeCanDrag.bind(that.graph)\n                });\n            },\n            updateMapDate(tree) {\n                if ( this.renderer ) {\n                    $('#mindmapCanvas').html('')\n                }\n                this.initMap();\n                this.graph.init(this.renderer, tree, this.isTreeMap);\n            },\n\n        },\n        mounted() {\n            this.initMap();\n            this.updateMapDate(this.tree);\n\n            $('.label-group button').click(() => {\n                var text = $('.label-group input').val();\n                this.graph.setLabel(text);\n            });\n        }\n    }\n</script>\n\n<style type=\"text/css\" lang=\"less\" scoped>\n    @import \"./index\";\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=214cc2f0&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=214cc2f0&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"214cc2f0\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"hello\"},[_c('h1',[_vm._v(_vm._s(_vm.msg))]),_vm._m(0),_c('h3',[_vm._v(\"Installed CLI Plugins\")]),_vm._m(1),_c('h3',[_vm._v(\"Essential Links\")]),_vm._m(2),_c('h3',[_vm._v(\"Ecosystem\")]),_vm._m(3)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\" For a guide and recipes on how to configure / customize this project,\"),_c('br'),_vm._v(\" check out the \"),_c('a',{attrs:{\"href\":\"https://cli.vuejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"vue-cli documentation\")]),_vm._v(\". \")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"https://github.com/vuejs/vue-cli/tree/dev/packages/%40vue/cli-plugin-babel\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"babel\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://github.com/vuejs/vue-cli/tree/dev/packages/%40vue/cli-plugin-eslint\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"eslint\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"https://vuejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"Core Docs\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://forum.vuejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"Forum\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://chat.vuejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"Community Chat\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://twitter.com/vuejs\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"Twitter\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://news.vuejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"News\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"https://router.vuejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"vue-router\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://vuex.vuejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"vuex\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://github.com/vuejs/vue-devtools#vue-devtools\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"vue-devtools\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://vue-loader.vuejs.org\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"vue-loader\")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://github.com/vuejs/awesome-vue\",\"target\":\"_blank\",\"rel\":\"noopener\"}},[_vm._v(\"awesome-vue\")])])])}]\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"hello\">\n    <h1>{{ msg }}</h1>\n    <p>\n      For a guide and recipes on how to configure / customize this project,<br>\n      check out the\n      <a href=\"https://cli.vuejs.org\" target=\"_blank\" rel=\"noopener\">vue-cli documentation</a>.\n    </p>\n    <h3>Installed CLI Plugins</h3>\n    <ul>\n      <li><a href=\"https://github.com/vuejs/vue-cli/tree/dev/packages/%40vue/cli-plugin-babel\" target=\"_blank\" rel=\"noopener\">babel</a></li>\n      <li><a href=\"https://github.com/vuejs/vue-cli/tree/dev/packages/%40vue/cli-plugin-eslint\" target=\"_blank\" rel=\"noopener\">eslint</a></li>\n    </ul>\n    <h3>Essential Links</h3>\n    <ul>\n      <li><a href=\"https://vuejs.org\" target=\"_blank\" rel=\"noopener\">Core Docs</a></li>\n      <li><a href=\"https://forum.vuejs.org\" target=\"_blank\" rel=\"noopener\">Forum</a></li>\n      <li><a href=\"https://chat.vuejs.org\" target=\"_blank\" rel=\"noopener\">Community Chat</a></li>\n      <li><a href=\"https://twitter.com/vuejs\" target=\"_blank\" rel=\"noopener\">Twitter</a></li>\n      <li><a href=\"https://news.vuejs.org\" target=\"_blank\" rel=\"noopener\">News</a></li>\n    </ul>\n    <h3>Ecosystem</h3>\n    <ul>\n      <li><a href=\"https://router.vuejs.org\" target=\"_blank\" rel=\"noopener\">vue-router</a></li>\n      <li><a href=\"https://vuex.vuejs.org\" target=\"_blank\" rel=\"noopener\">vuex</a></li>\n      <li><a href=\"https://github.com/vuejs/vue-devtools#vue-devtools\" target=\"_blank\" rel=\"noopener\">vue-devtools</a></li>\n      <li><a href=\"https://vue-loader.vuejs.org\" target=\"_blank\" rel=\"noopener\">vue-loader</a></li>\n      <li><a href=\"https://github.com/vuejs/awesome-vue\" target=\"_blank\" rel=\"noopener\">awesome-vue</a></li>\n    </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"less\">\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HelloWorld.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HelloWorld.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./HelloWorld.vue?vue&type=template&id=df6a9e02&scoped=true&\"\nimport script from \"./HelloWorld.vue?vue&type=script&lang=js&\"\nexport * from \"./HelloWorld.vue?vue&type=script&lang=js&\"\nimport style0 from \"./HelloWorld.vue?vue&type=style&index=0&id=df6a9e02&scoped=true&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"df6a9e02\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div class=\"home\">\n    <h2>思维导图</h2>\n    <div>重构自某位 <a href=\"https://github.com/RockyRen/mindmaptree\">不知名大佬</a>, 核心渲染方式已经重写, 并且增加了树状导图</div>\n    <div><a href=\"https://github.com/Heathennn/Kmap#%E5%AF%BC%E5%9B%BE\">Docs</a></div>\n    <Map></Map>\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport Map from '@/components/map2/index'\nimport HelloWorld from '@/components/HelloWorld.vue'\n\nexport default {\n  name: 'home',\n  components: {\n    HelloWorld,\n    Map\n  }\n}\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Home.vue?vue&type=template&id=2209f262&\"\nimport script from \"./Home.vue?vue&type=script&lang=js&\"\nexport * from \"./Home.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport Home from '../views/Home.vue'\n\nVue.use(VueRouter)\n\nconst routes = [\n  {\n    path: '/',\n    name: 'home',\n    component: Home\n  },\n]\n\nconst router = new VueRouter({\n  mode: 'history',\n  base: '/Kmap',\n  routes\n})\n\nexport default router\n","import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\n\r\nVue.config.productionTip = false\r\n\r\nnew Vue({\r\n  router,\r\n  render: h => h(App)\r\n}).$mount('#app')\r\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=214cc2f0&lang=less&scoped=true&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=214cc2f0&lang=less&scoped=true&\"","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ViewController.vue?vue&type=style&index=0&lang=less&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ViewController.vue?vue&type=style&index=0&lang=less&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HelloWorld.vue?vue&type=style&index=0&id=df6a9e02&scoped=true&lang=less&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HelloWorld.vue?vue&type=style&index=0&id=df6a9e02&scoped=true&lang=less&\""],"sourceRoot":""}